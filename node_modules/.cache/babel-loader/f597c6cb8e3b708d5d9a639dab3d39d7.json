{"ast":null,"code":"var _jsxFileName = \"/Users/lynettemidy/Documents/Final-WYRather/src/components/Summary.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Card } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nexport class Summary extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      viewPoll: false\n    };\n\n    this.handleClick = e => {\n      this.setState(prevState => ({\n        viewSummary: !prevState.viewSummary\n      }));\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          question = _this$props.question,\n          votedQuestion = _this$props.votedQuestion;\n    const buttonContent = votedQuestion === true ? 'View Voting Results' : 'Select Option';\n\n    if (this.state.viewSummary === true) {\n      return React.createElement(Redirect, {\n        push: true,\n        to: \"/questions/\".concat(question.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Card, {\n      id: \"{question.id}\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Would you rather?\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"contact-list-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, question.optionOne.text), React.createElement(\"li\", {\n      className: \"contact-list-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, question.optionTwo.text, \" \")))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"blue\",\n      fluid: true,\n      onClick: this.handleClick,\n      content: buttonContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })))));\n  }\n\n}\nSummary.propTypes = {\n  question: PropTypes.object.isRequired,\n  votedQuestion: PropTypes.bool.isRequired\n};\nexport default Summary;","map":{"version":3,"sources":["/Users/lynettemidy/Documents/Final-WYRather/src/components/Summary.js"],"names":["React","Component","Fragment","Redirect","Button","Card","PropTypes","Summary","state","viewPoll","handleClick","e","setState","prevState","viewSummary","render","props","question","votedQuestion","buttonContent","id","optionOne","text","optionTwo","propTypes","object","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;AACA,OAAOC,SAAP,MAAuB,YAAvB;AAEA,OAAO,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAKnCO,KALmC,GAK3B;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAL2B;;AAAA,SAQnCC,WARmC,GAQrBC,CAAC,IAAI;AACjB,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAAEC,QAAAA,WAAW,EAAE,CAACD,SAAS,CAACC;AAA1B,OAAL,CAAvB;AAED,KAXkC;AAAA;;AAYnCC,EAAAA,MAAM,GAAG;AAAA,wBAC6B,KAAKC,KADlC;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,aADX,eACWA,aADX;AAEP,UAAMC,aAAa,GAAGD,aAAa,KAAK,IAAlB,GAAyB,qBAAzB,GAAiD,eAAvE;;AAEA,QAAI,KAAKV,KAAL,CAAWM,WAAX,KAA2B,IAA/B,EAAqC;AACnC,aAAO,oBAAC,QAAD;AAAU,QAAA,IAAI,MAAd;AAAe,QAAA,EAAE,uBAAgBG,QAAQ,CAACG,EAAzB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAEC,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,QAAQ,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADH,EAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,QAAQ,CAACI,SAAT,CAAmBC,IADtB,CADD,EAIG;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,QAAQ,CAACM,SAAT,CAAmBD,IADtB,MAJH,CAJH,CADF,CADF,EAeG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACC,MAAA,KAAK,EAAC,MADP;AAEC,MAAA,KAAK,MAFN;AAGC,MAAA,OAAO,EAAE,KAAKZ,WAHf;AAIC,MAAA,OAAO,EAAES,aAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAfH,CADF,CADF,CADF;AA+BH;;AAnDkC;AAA1BZ,O,CACJiB,S,GAAY;AACjBP,EAAAA,QAAQ,EAAEX,SAAS,CAACmB,MAAV,CAAiBC,UADV;AAEjBR,EAAAA,aAAa,EAAEZ,SAAS,CAACqB,IAAV,CAAeD;AAFb,C;AAqDrB,eAAenB,OAAf","sourcesContent":["import React, { Component, Fragment} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Card } from 'semantic-ui-react';\nimport PropTypes from  'prop-types';\n\nexport class Summary extends Component {\n  static propTypes = {\n    question: PropTypes.object.isRequired,\n    votedQuestion: PropTypes.bool.isRequired,\n    };\n    state = {\n      viewPoll: false\n    };\n    handleClick = e => {\n      this.setState(prevState => ({ viewSummary: !prevState.viewSummary\n      }));\n    };\n    render() {\n      const { question, votedQuestion } = this.props;\n      const buttonContent = votedQuestion === true ? 'View Voting Results' : 'Select Option';\n\n      if (this.state.viewSummary === true) {\n        return <Redirect push to={`/questions/${question.id}`} />;\n      }\n\n        return (\n          <Fragment>\n            <Card.Group centered>\n              <Card id='{question.id}'>\n                <Card.Content>\n                  <Card.Description>\n                     <h4>\n                      Would you rather?\n                     </h4>\n                     <ul >\n                      <li className='contact-list-item'>\n                        {question.optionOne.text}\n                        </li>\n                        <li className='contact-list-item'>\n                          {question.optionTwo.text} </li>\n                     </ul>\n                   </Card.Description>\n                 </Card.Content>\n                 <div >\n                   <Button\n                    color='blue'\n                    fluid\n                    onClick={this.handleClick}\n                    content={buttonContent}\n                    >\n                    </Button>\n                 </div>\n             </Card>\n           </Card.Group>\n         </Fragment>\n      );\n    }\n  }\n\nexport default Summary;\n"]},"metadata":{},"sourceType":"module"}