{"ast":null,"code":"var _jsxFileName = \"/Users/lynettemidy/Documents/Final/src/components/Question.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Radio, Divider, Header } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { handleAnswer } from '../actions/shared';\nexport class Question extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: ''\n    };\n\n    this.handleChange = (e, {\n      value\n    }) => this.setState({\n      value\n    });\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.value !== '') {\n        const _this$props = this.props,\n              question = _this$props.question,\n              handleAnswer = _this$props.handleAnswer;\n        handleAnswer(question.id, this.state.value);\n      }\n    };\n  }\n\n  render() {\n    const question = this.props.question;\n    const disabled = this.state.value === '' ? true : false;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Would you rather?\"), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      grouped: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      label: question.optionOne.text,\n      control: \"input\",\n      type: \"radio\",\n      value: \"optionOne\",\n      name: \"radioGroup\",\n      checked: this.state.value === 'optionOne',\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      horizontal: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"OR\")), React.createElement(Radio, {\n      label: question.optionTwo.text,\n      control: \"input\",\n      type: \"radio\",\n      name: \"radioGroup\",\n      value: \"optionTwo\",\n      checked: this.state.value === 'optionTwo',\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Button, {\n      disabled: disabled,\n      color: \"blue\",\n      fluid: true,\n      content: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })))));\n  }\n\n}\nQuestion.propTypes = {\n  authedUser: PropTypes.string.isRequired,\n  handleAnswer: PropTypes.func.isRequired,\n  question: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps({\n  authedUser\n}, {\n  match\n}) {\n  return {\n    authedUser\n  };\n}\n\nexport default connect(mapStateToProps, {\n  handleAnswer\n})(Question);","map":{"version":3,"sources":["/Users/lynettemidy/Documents/Final/src/components/Question.js"],"names":["React","Component","Fragment","connect","Button","Form","Radio","Divider","Header","PropTypes","handleAnswer","Question","state","value","handleChange","e","setState","handleSubmit","preventDefault","props","question","id","render","disabled","optionOne","text","optionTwo","propTypes","authedUser","string","isRequired","func","object","mapStateToProps","match"],"mappings":"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","sourcesContent":["import React, { Component , Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Radio, Divider, Header} from 'semantic-ui-react';\nimport PropTypes from  'prop-types';\nimport { handleAnswer } from '../actions/shared';\n\n\nexport class Question extends Component {\n  static propTypes = {\n    authedUser: PropTypes.string.isRequired,\n    handleAnswer: PropTypes.func.isRequired,\n    question: PropTypes.object.isRequired\n  };\n  state = {\n    value: ''\n  }\n\n    handleChange = (e, { value }) => this.setState({ value });\n    handleSubmit = e => {\n      e.preventDefault();\n      if (this.state.value !== '') {\n        const { question, handleAnswer } = this.props;\n        handleAnswer(question.id, this.state.value);\n      }\n    };\n    render() {\n        const { question } = this.props;\n        const disabled = this.state.value === '' ? true : false;\n\n      return (\n        <Fragment>\n           <h4>\n            Would you rather?\n           </h4>\n           <Form onSubmit={this.handleSubmit}>\n              <Form.Group grouped>\n                <Radio\n                  label= {question.optionOne.text}\n                  control='input'\n                  type='radio'\n                  value='optionOne'\n                  name='radioGroup'\n                  checked={this.state.value === 'optionOne'}\n                  onChange={this.handleChange}\n                />\n                <Divider horizontal>\n                    <Header as='h4'>\n                      OR\n                    </Header>\n                  </Divider>\n                <Radio\n                  label= {question.optionTwo.text}\n                  control='input'\n                  type='radio'\n                  name='radioGroup'\n                  value='optionTwo'\n                  checked={this.state.value === 'optionTwo'}\n                  onChange={this.handleChange}\n              />\n              <Form.Field>\n                <Button\n                  disabled ={disabled}\n                  color=\"blue\"\n                  fluid\n                  content=\"Submit\"\n                  />\n              </Form.Field>\n            </Form.Group>\n          </Form>\n       </Fragment>\n    )\n  }\n}\n\n\nfunction mapStateToProps({ authedUser },{ match })\n {\n  return {\n     authedUser\n  };\n}\n\nexport default connect(\n  mapStateToProps,{ handleAnswer })(Question);\n"]},"metadata":{},"sourceType":"module"}