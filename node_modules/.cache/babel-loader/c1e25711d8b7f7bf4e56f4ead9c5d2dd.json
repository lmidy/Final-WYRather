{"ast":null,"code":"var _jsxFileName = \"/Users/lynettemidy/Documents/Final-WYRather/src/components/Add.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Header, Form, Segment, Grid } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { handleAddQuestion } from '../actions/shared.js';\nexport class Add extends Component {\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(Segment.Group, {\n      raised: true,\n      padded: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(QuestionHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }), React.createElement(QuestionGridLayout, {\n      form: React.createElement(ConnectedQuestionForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst QuestionHeader = () => React.createElement(Header, {\n  as: \"h4\",\n  block: true,\n  attached: \"top\",\n  textAlign: \"center\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(Header.Content, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, \"Add a new question\"), React.createElement(Header.Subheader, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, \"Would you rather...\"));\n\nconst QuestionGridLayout = ({\n  form\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, React.createElement(Grid, {\n  padded: true,\n  textAlign: \"center\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(Grid.Row, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, React.createElement(Grid.Column, {\n  width: 16,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, form))));\n\nclass QuestionForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      optionOne: '',\n      optionTwo: '',\n      submittedOptionOne: '',\n      submittionOptionTwo: '',\n      toHome: false\n    };\n\n    this.handleChange = (e, {\n      name,\n      value\n    }) => this.setState({\n      [name]: value\n    });\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            optionOne = _this$state.optionOne,\n            optionTwo = _this$state.optionTwo;\n      const _this$props = this.props,\n            dispatch = _this$props.dispatch,\n            id = _this$props.id;\n      dispatch(handleAddQuestion(optionOne, optionTwo));\n      this.setState(() => ({\n        optionOne: '',\n        optionTwo: '',\n        toHome: id ? false : true\n      }));\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          optionOne = _this$state2.optionOne,\n          optionTwo = _this$state2.optionTwo,\n          toHome = _this$state2.toHome;\n    const disabled = optionOne === '' || this.optionTwo === '';\n\n    if (toHome === true) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      placeholder: \"Enter Option One\",\n      name: \"optionOne\",\n      value: optionOne,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \" or \"), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      placeholder: \"Enter Option Two\",\n      name: \"optionTwo\",\n      value: optionTwo,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Form.Button, {\n      color: \"blue\",\n      fluid: true,\n      disabled: disabled,\n      content: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst ConnectedQuestionForm = connect(mapStateToProps)(QuestionForm);\nAdd.propTypes = {\n  authedUser: PropTypes.string,\n  addQuestion: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps({\n  authedUser\n}) {\n  //console.log('what is available in props ' +authedUser)\n  return {\n    authedUser\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addQuestion: (optionOne, optionTwo) => {\n      dispatch(handleAddQuestion(optionOne, optionTwo));\n    }\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Add);","map":{"version":3,"sources":["/Users/lynettemidy/Documents/Final-WYRather/src/components/Add.js"],"names":["React","Component","Fragment","Header","Form","Segment","Grid","connect","Redirect","PropTypes","handleAddQuestion","Add","render","QuestionHeader","QuestionGridLayout","form","QuestionForm","state","optionOne","optionTwo","submittedOptionOne","submittionOptionTwo","toHome","handleChange","e","name","value","setState","handleSubmit","preventDefault","props","dispatch","id","disabled","ConnectedQuestionForm","mapStateToProps","propTypes","authedUser","string","addQuestion","func","isRequired","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport {Header, Form, Segment, Grid} from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport { handleAddQuestion } from '../actions/shared.js';\n\nexport class Add extends Component {\n  render() {\n    return (\n      <Fragment>\n        <div className='login'>\n          <Segment.Group raised padded='true'>\n            <QuestionHeader />\n            <QuestionGridLayout\n              form={<ConnectedQuestionForm />}\n            />\n          </Segment.Group>\n        </div>\n      </Fragment>\n\n    );\n  }\n}\n\nconst QuestionHeader = () => (\n  <Header as=\"h4\" block attached=\"top\" textAlign=\"center\">\n    <Header.Content>Add a new question</Header.Content>\n      <Header.Subheader>Would you rather...</Header.Subheader>\n  </Header>\n);\n\nconst QuestionGridLayout = ({ form }) => (\n  <div>\n    <Grid padded textAlign=\"center\">\n      <Grid.Row>\n        <Grid.Column width={16}>\n          {form}\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  </div>\n);\n\n\n\nclass QuestionForm extends Component {\n  state = {\n    optionOne: '',\n    optionTwo: '',\n    submittedOptionOne: '',\n    submittionOptionTwo: '',\n    toHome: false\n  };\n  handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    const { optionOne, optionTwo} = this.state\n    const { dispatch, id} = this.props\n\n    dispatch(handleAddQuestion(optionOne, optionTwo))\n\n    this.setState(() => ({\n      optionOne:'',\n      optionTwo:'',\n      toHome: id ? false : true,\n    }))\n}\n\n  render() {\n    const { optionOne, optionTwo, toHome } = this.state\n    const disabled = optionOne === '' || this.optionTwo === '';\n\n    if (toHome === true) {\n      return <Redirect to='/' />\n    }\n    return (\n      <Form onSubmit={this.handleSubmit} widths='equal'>\n           <Form.Group>\n             <Form.Input\n               placeholder='Enter Option One'\n               name='optionOne'\n               value={optionOne}\n               onChange={this.handleChange}\n             />\n           </Form.Group>\n           <span> or </span>\n           <Form.Group>\n             <Form.Input\n               placeholder='Enter Option Two'\n               name='optionTwo'\n               value={optionTwo}\n               onChange={this.handleChange}\n             />\n             </Form.Group>\n             <Form.Group>\n             <Form.Button\n               color='blue'\n               fluid\n               disabled={disabled}\n               content='Submit' />\n           </Form.Group>\n      </Form>\n    );\n  }\n}\n\nconst ConnectedQuestionForm = connect(mapStateToProps)(QuestionForm);\nAdd.propTypes = {\n  authedUser: PropTypes.string,\n  addQuestion: PropTypes.func.isRequired,\n};\n\nfunction mapStateToProps({ authedUser }) {\n  //console.log('what is available in props ' +authedUser)\n  return {\n    authedUser\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n    return {\n      addQuestion: (optionOne, optionTwo) => {\n        dispatch(handleAddQuestion(optionOne, optionTwo))\n      }\n    }\n  }\n\n\nexport default connect(null, mapDispatchToProps)(Add);\n"]},"metadata":{},"sourceType":"module"}